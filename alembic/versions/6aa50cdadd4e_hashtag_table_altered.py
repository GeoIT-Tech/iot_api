"""Hashtag Table Altered

Revision ID: 6aa50cdadd4e
Revises: fb00e83e308c
Create Date: 2024-01-15 07:48:12.740367

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6aa50cdadd4e'
down_revision = 'fb00e83e308c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('hashtags', sa.Column('hashtags', sa.String(), nullable=True))
    op.add_column('hashtags', sa.Column('hashtags_count', sa.Integer(), nullable=True))
    op.add_column('hashtags', sa.Column('posts_count', sa.Integer(), nullable=True))
    op.add_column('hashtags', sa.Column('certificate_count', sa.Integer(), nullable=True))
    op.add_column('hashtags', sa.Column('ebattles_count', sa.Integer(), nullable=True))
    op.drop_constraint('hashtags_MID_fkey', 'hashtags', type_='foreignkey')
    op.drop_constraint('hashtags_certificate_uuid_fkey', 'hashtags', type_='foreignkey')
    op.drop_constraint('hashtags_e_battle_uuid_fkey', 'hashtags', type_='foreignkey')
    op.drop_constraint('hashtags_post_uuid_fkey', 'hashtags', type_='foreignkey')
    op.drop_constraint('hashtags_user_uuid_fkey', 'hashtags', type_='foreignkey')
    op.drop_column('hashtags', 'caption')
    op.drop_column('hashtags', 'user_uuid')
    op.drop_column('hashtags', 'certificate_uuid')
    op.drop_column('hashtags', 'e_battle_uuid')
    op.drop_column('hashtags', 'post_uuid')
    op.drop_column('hashtags', 'MID')
    op.drop_column('hashtags', 'post_hastags')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('hashtags', sa.Column('post_hastags', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('hashtags', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('hashtags', sa.Column('post_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('hashtags', sa.Column('e_battle_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('hashtags', sa.Column('certificate_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('hashtags', sa.Column('user_uuid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.add_column('hashtags', sa.Column('caption', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('hashtags_user_uuid_fkey', 'hashtags', 'users', ['user_uuid'], ['uuid'])
    op.create_foreign_key('hashtags_post_uuid_fkey', 'hashtags', 'posts', ['post_uuid'], ['uuid'])
    op.create_foreign_key('hashtags_e_battle_uuid_fkey', 'hashtags', 'e_battles', ['e_battle_uuid'], ['uuid'])
    op.create_foreign_key('hashtags_certificate_uuid_fkey', 'hashtags', 'certificates', ['certificate_uuid'], ['uuid'])
    op.create_foreign_key('hashtags_MID_fkey', 'hashtags', 'users', ['MID'], ['MID'])
    op.drop_column('hashtags', 'ebattles_count')
    op.drop_column('hashtags', 'certificate_count')
    op.drop_column('hashtags', 'posts_count')
    op.drop_column('hashtags', 'hashtags_count')
    op.drop_column('hashtags', 'hashtags')
    # ### end Alembic commands ###
