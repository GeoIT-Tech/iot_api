"""report table modified

Revision ID: 5de7a337020d
Revises: 118d0714777d
Create Date: 2024-03-28 18:10:29.649550

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5de7a337020d'
down_revision = '118d0714777d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reports',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('MID', sa.String(), nullable=True),
    sa.Column('media_type', sa.String(), nullable=True),
    sa.Column('media_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('reported_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('reported_count', sa.Integer(), nullable=True),
    sa.Column('report_reason', sa.String(), nullable=True),
    sa.Column('report_status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], ),
    sa.ForeignKeyConstraint(['reported_uuid'], ['users.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.drop_table('reports_table')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reports_table',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('reported_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('post_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('certificate_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('ebattle_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('profile_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('comment_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('report_reason', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('report_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('resolved_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('reviews_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['certificate_uuid'], ['certificates.uuid'], name='reports_table_certificate_uuid_fkey'),
    sa.ForeignKeyConstraint(['comment_uuid'], ['comments.uuid'], name='reports_table_comment_uuid_fkey'),
    sa.ForeignKeyConstraint(['ebattle_uuid'], ['e_battles.uuid'], name='reports_table_ebattle_uuid_fkey'),
    sa.ForeignKeyConstraint(['post_uuid'], ['posts.uuid'], name='reports_table_post_uuid_fkey'),
    sa.ForeignKeyConstraint(['profile_uuid'], ['users.uuid'], name='reports_table_profile_uuid_fkey'),
    sa.ForeignKeyConstraint(['reported_uuid'], ['users.uuid'], name='reports_table_reported_uuid_fkey'),
    sa.ForeignKeyConstraint(['reviews_uuid'], ['reviews.uuid'], name='reports_table_reviews_uuid_fkey'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], name='reports_table_user_uuid_fkey'),
    sa.PrimaryKeyConstraint('uuid', name='reports_table_pkey'),
    sa.UniqueConstraint('uuid', name='reports_table_uuid_key')
    )
    op.drop_table('reports')
    # ### end Alembic commands ###
