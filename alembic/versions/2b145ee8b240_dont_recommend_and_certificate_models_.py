"""Dont recommend and certificate models added

Revision ID: 2b145ee8b240
Revises: 0c9ede98c23c
Create Date: 2022-12-27 21:32:39.273862

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2b145ee8b240'
down_revision = '0c9ede98c23c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dont_recommends',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('MID', sa.String(), nullable=True),
    sa.Column('post_uuid', sa.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('certificate_uuid', sa.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.add_column('boosts', sa.Column('boosting_count', sa.Integer(), nullable=True))
    op.add_column('boosts', sa.Column('booster_count', sa.Integer(), nullable=True))
    op.create_unique_constraint(None, 'certificate_likes', ['uuid'])
    op.add_column('certificates', sa.Column('tags', sa.ARRAY(postgresql.UUID(as_uuid=True)), nullable=True))
    op.create_unique_constraint(None, 'certificates', ['uuid'])
    op.create_unique_constraint(None, 'comment_likes', ['uuid'])
    op.add_column('hashtags', sa.Column('certificate_uuid', postgresql.UUID(as_uuid=True), nullable=True))
    op.create_foreign_key(None, 'hashtags', 'certificates', ['certificate_uuid'], ['uuid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'hashtags', type_='foreignkey')
    op.drop_column('hashtags', 'certificate_uuid')
    op.drop_constraint(None, 'comment_likes', type_='unique')
    op.drop_constraint(None, 'certificates', type_='unique')
    op.drop_column('certificates', 'tags')
    op.drop_constraint(None, 'certificate_likes', type_='unique')
    op.drop_column('boosts', 'booster_count')
    op.drop_column('boosts', 'boosting_count')
    op.drop_table('dont_recommends')
    # ### end Alembic commands ###
