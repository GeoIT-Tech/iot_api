"""Revisit features modified

Revision ID: 9a9ad17a785a
Revises: 05d4d94220ca
Create Date: 2024-03-28 11:53:25.319026

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9a9ad17a785a'
down_revision = '05d4d94220ca'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reports')
    op.drop_table('ei_admin_management')
    op.drop_table('boosts')
    op.drop_table('ei_aluminies')
    op.drop_table('boost_requests')
    op.drop_table('ei_faculties')
    op.create_unique_constraint(None, 'app_data', ['uuid'])
    op.drop_constraint('certificates_MID_fkey', 'certificates', type_='foreignkey')
    op.drop_column('certificates', 'MID')
    op.drop_constraint('comments_MID_fkey', 'comments', type_='foreignkey')
    op.drop_column('comments', 'MID')
    op.drop_constraint('dont_recommends_MID_fkey', 'dont_recommends', type_='foreignkey')
    op.drop_column('dont_recommends', 'MID')
    op.drop_constraint('e_battles_MID_fkey', 'e_battles', type_='foreignkey')
    op.drop_column('e_battles', 'MID')
    op.add_column('eduinstitutes', sa.Column('ranking', sa.String(), nullable=True))
    op.add_column('eduinstitutes', sa.Column('course_url', sa.String(), nullable=True))
    op.add_column('eduinstitutes', sa.Column('admission_url', sa.String(), nullable=True))
    op.drop_constraint('eduinstitutes_MID_fkey', 'eduinstitutes', type_='foreignkey')
    op.drop_column('eduinstitutes', 'entrance_eligibility')
    op.drop_column('eduinstitutes', 'NIRF_ranking')
    op.drop_column('eduinstitutes', 'student_placed')
    op.drop_column('eduinstitutes', 'MID')
    op.drop_constraint('ei_placement_partner_MID_fkey', 'ei_placement_partner', type_='foreignkey')
    op.drop_column('ei_placement_partner', 'MID')
    op.drop_constraint('join_e_battles_MID_fkey', 'join_e_battles', type_='foreignkey')
    op.drop_column('join_e_battles', 'MID')
    op.drop_constraint('organizations_MID_fkey', 'organizations', type_='foreignkey')
    op.drop_column('organizations', 'MID')
    op.drop_constraint('pa_education_info_MID_fkey', 'pa_education_info', type_='foreignkey')
    op.drop_column('pa_education_info', 'grade')
    op.drop_column('pa_education_info', 'MID')
    op.drop_column('pa_education_info', 'YOG')
    op.drop_column('pa_education_info', 'location')
    op.drop_constraint('pa_projects_MID_fkey', 'pa_projects', type_='foreignkey')
    op.drop_column('pa_projects', 'MID')
    op.drop_constraint('pa_work_info_MID_fkey', 'pa_work_info', type_='foreignkey')
    op.drop_column('pa_work_info', 'MID')
    op.drop_column('pa_work_info', 'YOE')
    op.drop_constraint('partner_and_services_MID_fkey', 'partner_and_services', type_='foreignkey')
    op.drop_column('partner_and_services', 'MID')
    op.drop_constraint('personals_MID_fkey', 'personals', type_='foreignkey')
    op.drop_column('personals', 'MID')
    op.drop_constraint('posts_MID_fkey', 'posts', type_='foreignkey')
    op.drop_column('posts', 'MID')
    op.drop_constraint('reviews_user_MID_fkey', 'reviews', type_='foreignkey')
    op.drop_column('reviews', 'user_MID')
    op.drop_constraint('settings_MID_fkey', 'settings', type_='foreignkey')
    op.drop_column('settings', 'MID')
    op.drop_constraint('social_links_MID_fkey', 'social_links', type_='foreignkey')
    op.drop_column('social_links', 'MID')
    op.add_column('users', sa.Column('is_protected', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'is_protected')
    op.add_column('social_links', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('social_links_MID_fkey', 'social_links', 'users', ['MID'], ['MID'])
    op.add_column('settings', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('settings_MID_fkey', 'settings', 'users', ['MID'], ['MID'])
    op.add_column('reviews', sa.Column('user_MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('reviews_user_MID_fkey', 'reviews', 'users', ['user_MID'], ['MID'])
    op.add_column('posts', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('posts_MID_fkey', 'posts', 'users', ['MID'], ['MID'])
    op.add_column('personals', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('personals_MID_fkey', 'personals', 'users', ['MID'], ['MID'])
    op.add_column('partner_and_services', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('partner_and_services_MID_fkey', 'partner_and_services', 'users', ['MID'], ['MID'])
    op.add_column('pa_work_info', sa.Column('YOE', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('pa_work_info', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('pa_work_info_MID_fkey', 'pa_work_info', 'users', ['MID'], ['MID'])
    op.add_column('pa_projects', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('pa_projects_MID_fkey', 'pa_projects', 'users', ['MID'], ['MID'])
    op.add_column('pa_education_info', sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('pa_education_info', sa.Column('YOG', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('pa_education_info', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('pa_education_info', sa.Column('grade', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.create_foreign_key('pa_education_info_MID_fkey', 'pa_education_info', 'users', ['MID'], ['MID'])
    op.add_column('organizations', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('organizations_MID_fkey', 'organizations', 'users', ['MID'], ['MID'])
    op.add_column('join_e_battles', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('join_e_battles_MID_fkey', 'join_e_battles', 'users', ['MID'], ['MID'])
    op.add_column('ei_placement_partner', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('ei_placement_partner_MID_fkey', 'ei_placement_partner', 'users', ['MID'], ['MID'])
    op.add_column('eduinstitutes', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('eduinstitutes', sa.Column('student_placed', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('eduinstitutes', sa.Column('NIRF_ranking', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('eduinstitutes', sa.Column('entrance_eligibility', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('eduinstitutes_MID_fkey', 'eduinstitutes', 'users', ['MID'], ['MID'])
    op.drop_column('eduinstitutes', 'admission_url')
    op.drop_column('eduinstitutes', 'course_url')
    op.drop_column('eduinstitutes', 'ranking')
    op.add_column('e_battles', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('e_battles_MID_fkey', 'e_battles', 'users', ['MID'], ['MID'])
    op.add_column('dont_recommends', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('dont_recommends_MID_fkey', 'dont_recommends', 'users', ['MID'], ['MID'])
    op.add_column('comments', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('comments_MID_fkey', 'comments', 'users', ['MID'], ['MID'])
    op.add_column('certificates', sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('certificates_MID_fkey', 'certificates', 'users', ['MID'], ['MID'])
    op.drop_constraint(None, 'app_data', type_='unique')
    op.create_table('ei_faculties',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('edu_institute_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], name='ei_faculties_MID_fkey'),
    sa.ForeignKeyConstraint(['edu_institute_uuid'], ['eduinstitutes.uuid'], name='ei_faculties_edu_institute_uuid_fkey'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], name='ei_faculties_user_uuid_fkey'),
    sa.PrimaryKeyConstraint('uuid', name='ei_faculties_pkey'),
    sa.UniqueConstraint('uuid', name='ei_faculties_uuid_key')
    )
    op.create_table('boost_requests',
    sa.Column('sender_uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('receiver_uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['receiver_uuid'], ['users.uuid'], name='boost_requests_receiver_uuid_fkey'),
    sa.ForeignKeyConstraint(['sender_uuid'], ['users.uuid'], name='boost_requests_sender_uuid_fkey'),
    sa.PrimaryKeyConstraint('sender_uuid', 'receiver_uuid', name='boost_requests_pkey')
    )
    op.create_table('ei_aluminies',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('edu_institute_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], name='ei_aluminies_MID_fkey'),
    sa.ForeignKeyConstraint(['edu_institute_uuid'], ['eduinstitutes.uuid'], name='ei_aluminies_edu_institute_uuid_fkey'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], name='ei_aluminies_user_uuid_fkey'),
    sa.PrimaryKeyConstraint('uuid', name='ei_aluminies_pkey'),
    sa.UniqueConstraint('uuid', name='ei_aluminies_uuid_key')
    )
    op.create_table('boosts',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('boosting_uuid', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('booster_uuid', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('mutual_account', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('boosting_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('booster_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], name='boosts_MID_fkey'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], name='boosts_user_uuid_fkey'),
    sa.PrimaryKeyConstraint('uuid', name='boosts_pkey'),
    sa.UniqueConstraint('uuid', name='boosts_uuid_key')
    )
    op.create_table('ei_admin_management',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('edu_institute_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], name='ei_admin_management_MID_fkey'),
    sa.ForeignKeyConstraint(['edu_institute_uuid'], ['eduinstitutes.uuid'], name='ei_admin_management_edu_institute_uuid_fkey'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], name='ei_admin_management_user_uuid_fkey'),
    sa.PrimaryKeyConstraint('uuid', name='ei_admin_management_pkey'),
    sa.UniqueConstraint('uuid', name='ei_admin_management_uuid_key')
    )
    op.create_table('reports',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('MID', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('reported_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('reported_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('media_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('media_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('report_reason', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('report_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('resolved_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], name='reports_MID_fkey'),
    sa.ForeignKeyConstraint(['reported_uuid'], ['users.uuid'], name='reports_reported_uuid_fkey'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], name='reports_user_uuid_fkey'),
    sa.PrimaryKeyConstraint('uuid', name='reports_pkey'),
    sa.UniqueConstraint('uuid', name='reports_uuid_key')
    )
    # ### end Alembic commands ###
