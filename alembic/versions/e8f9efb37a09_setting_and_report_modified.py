"""Setting and Report Modified

Revision ID: e8f9efb37a09
Revises: 6a2db387d1cf
Create Date: 2024-01-19 19:49:09.356344

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e8f9efb37a09'
down_revision = '6a2db387d1cf'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reports', sa.Column('media_type', sa.String(), nullable=True))
    op.add_column('reports', sa.Column('media_uuid', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('reports', sa.Column('report_reason', sa.String(), nullable=True))
    op.add_column('reports', sa.Column('report_status', sa.String(), nullable=True))
    op.add_column('reports', sa.Column('resolved_at', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 'reports', 'certificates', ['media_uuid'], ['uuid'])
    op.create_foreign_key(None, 'reports', 'comments', ['media_uuid'], ['uuid'])
    op.create_foreign_key(None, 'reports', 'users', ['media_uuid'], ['uuid'])
    op.create_foreign_key(None, 'reports', 'e_battles', ['media_uuid'], ['uuid'])
    op.create_foreign_key(None, 'reports', 'posts', ['media_uuid'], ['uuid'])
    op.create_foreign_key(None, 'reports', 'reviews', ['media_uuid'], ['uuid'])
    op.drop_column('reports', 'profile_report')
    op.drop_column('reports', 'certificate_report')
    op.drop_column('reports', 'comment_report')
    op.drop_column('reports', 'ebattle_report')
    op.drop_column('reports', 'updated_at')
    op.drop_column('reports', 'news_feed_report')
    op.drop_column('settings', 'private_account')
    op.add_column('verifications', sa.Column('status', sa.String(), nullable=True))
    op.add_column('verifications', sa.Column('status_note', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('verifications', 'status_note')
    op.drop_column('verifications', 'status')
    op.add_column('settings', sa.Column('private_account', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('news_feed_report', postgresql.ARRAY(postgresql.JSON(astext_type=sa.Text())), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('ebattle_report', postgresql.ARRAY(postgresql.JSON(astext_type=sa.Text())), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('comment_report', postgresql.ARRAY(postgresql.JSON(astext_type=sa.Text())), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('certificate_report', postgresql.ARRAY(postgresql.JSON(astext_type=sa.Text())), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('profile_report', postgresql.ARRAY(postgresql.JSON(astext_type=sa.Text())), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.drop_column('reports', 'resolved_at')
    op.drop_column('reports', 'report_status')
    op.drop_column('reports', 'report_reason')
    op.drop_column('reports', 'media_uuid')
    op.drop_column('reports', 'media_type')
    # ### end Alembic commands ###
