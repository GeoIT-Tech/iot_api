"""Personal Account details altered

Revision ID: 85af962b7d0f
Revises: 3bb1c253683c
Create Date: 2023-09-09 01:22:25.093153

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '85af962b7d0f'
down_revision = '3bb1c253683c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pa_education_info',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('MID', sa.String(), nullable=True),
    sa.Column('institute_name', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('degree', sa.String(), nullable=True),
    sa.Column('specialization', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('grade', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('YOG', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('pa_projects',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('MID', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('pa_work_info',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('MID', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('designation', sa.String(), nullable=True),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('roles_responsibilities', sa.String(), nullable=True),
    sa.Column('YOE', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('social_links',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('MID', sa.String(), nullable=True),
    sa.Column('facebook', sa.String(), nullable=True),
    sa.Column('instagram', sa.String(), nullable=True),
    sa.Column('youtube', sa.String(), nullable=True),
    sa.Column('twitter', sa.String(), nullable=True),
    sa.Column('linkedin', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.drop_table('partner_and_services')
    op.add_column('eduinstitutes', sa.Column('profile_photo', sa.String(), nullable=True))
    op.add_column('eduinstitutes', sa.Column('cover_image', sa.String(), nullable=True))
    op.drop_column('eduinstitutes', 'social_links')
    op.add_column('organizations', sa.Column('profile_photo', sa.String(), nullable=True))
    op.add_column('organizations', sa.Column('cover_image', sa.String(), nullable=True))
    op.drop_column('organizations', 'social_links')
    op.add_column('personals', sa.Column('profile_photo', sa.String(), nullable=True))
    op.add_column('personals', sa.Column('cover_image', sa.String(), nullable=True))
    op.drop_column('personals', 'YOG')
    op.drop_column('personals', 'YOE')
    op.drop_column('personals', 'grade')
    op.drop_column('personals', 'specialization')
    op.drop_column('personals', 'location')
    op.drop_column('personals', 'title')
    op.drop_column('personals', 'industry')
    op.drop_column('personals', 'social_links')
    op.drop_column('personals', 'company_name')
    op.drop_column('personals', 'projects')
    op.drop_column('personals', 'designation')
    op.drop_column('personals', 'institute_name')
    op.drop_column('users', 'profile_photo')
    op.drop_column('users', 'cover_image')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('cover_image', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('profile_photo', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('institute_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('designation', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('projects', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('social_links', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('industry', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('specialization', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('grade', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('YOE', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('personals', sa.Column('YOG', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('personals', 'cover_image')
    op.drop_column('personals', 'profile_photo')
    op.add_column('organizations', sa.Column('social_links', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.drop_column('organizations', 'cover_image')
    op.drop_column('organizations', 'profile_photo')
    op.add_column('eduinstitutes', sa.Column('social_links', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.drop_column('eduinstitutes', 'cover_image')
    op.drop_column('eduinstitutes', 'profile_photo')
    op.create_table('partner_and_services',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('organization_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('menem_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('services', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mobile', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['menem_id'], ['users.MID'], name='partner_and_services_menem_id_fkey'),
    sa.PrimaryKeyConstraint('uuid', name='partner_and_services_pkey'),
    sa.UniqueConstraint('uuid', name='partner_and_services_uuid_key')
    )
    op.drop_table('social_links')
    op.drop_table('pa_work_info')
    op.drop_table('pa_projects')
    op.drop_table('pa_education_info')
    # ### end Alembic commands ###
