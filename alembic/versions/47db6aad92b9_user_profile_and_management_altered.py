"""user profile and management altered

Revision ID: 47db6aad92b9
Revises: 8b67a247f057
Create Date: 2022-12-11 15:40:16.136403

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '47db6aad92b9'
down_revision = '8b67a247f057'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('menem_logs',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('ip', sa.Text(), nullable=True),
    sa.Column('module', sa.String(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('api', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('ei_admin_management',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('MID', sa.String(), nullable=True),
    sa.Column('edu_institute_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], ),
    sa.ForeignKeyConstraint(['edu_institute_uuid'], ['eduinstitutes.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('ei_admission_details',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('edu_institute_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('detail', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['edu_institute_uuid'], ['eduinstitutes.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('ei_aluminies',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('MID', sa.String(), nullable=True),
    sa.Column('edu_institute_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], ),
    sa.ForeignKeyConstraint(['edu_institute_uuid'], ['eduinstitutes.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('ei_faculties',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('MID', sa.String(), nullable=True),
    sa.Column('edu_institute_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['MID'], ['users.MID'], ),
    sa.ForeignKeyConstraint(['edu_institute_uuid'], ['eduinstitutes.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('ei_program_offers',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('edu_institute_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('detail', sa.String(), nullable=True),
    sa.Column('no_of_seat', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['edu_institute_uuid'], ['eduinstitutes.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.drop_table('lms_log')
    op.add_column('customs', sa.Column('institute_name', sa.String(), nullable=True))
    op.add_column('customs', sa.Column('specialization', sa.String(), nullable=True))
    op.add_column('customs', sa.Column('YOG', sa.Integer(), nullable=True))
    op.create_unique_constraint(None, 'post_likes_dislikes', ['uuid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'post_likes_dislikes', type_='unique')
    op.drop_column('customs', 'YOG')
    op.drop_column('customs', 'specialization')
    op.drop_column('customs', 'institute_name')
    op.create_table('lms_log',
    sa.Column('uuid', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_uuid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('ip', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('module', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status_code', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('uuid', name='lms_log_pkey'),
    sa.UniqueConstraint('uuid', name='lms_log_uuid_key')
    )
    op.drop_table('ei_program_offers')
    op.drop_table('ei_faculties')
    op.drop_table('ei_aluminies')
    op.drop_table('ei_admission_details')
    op.drop_table('ei_admin_management')
    op.drop_table('menem_logs')
    # ### end Alembic commands ###
